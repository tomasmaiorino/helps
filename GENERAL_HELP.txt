#######################################################################################################################################

															HELP COMMANDS

#######################################################################################################################################

***********************************************************
						GIT
***********************************************************
---------------------------------------------
GIT -- list different files from two git branchs
---------------------------------------------
$ git diff --name-status master

--------------------------------------------
GIT -- compare files from differente branchs
--------------------------------------------
$ git diff master -- file_name.jsp

------------------------------------------------
GIT -- SHOW DIFFERENT FILES BETWEEN TWO COMMITS
------------------------------------------------
$ git diff HEAD 7ab4720f403499a2ad00fce3e8c85a66e3ab673f --raw

------------------------------------------------
GIT -- REMOVE  UNTRACKED FILES
------------------------------------------------
$ git clean -f -d

------------------------------------------------
GIT -- LIST ALL FILES FROM A SPECIFIC COMMIT
------------------------------------------------
$ git show --name-only --oneline b2e25eed82f7276d3cbc7d57bedddec4691e5ec1

------------------------------------------------
GIT -- LIST ALL BRANCH`S COMMIT
-----------------------------------------------
$ git log --pretty=oneline

------------------------------------------------
GIT -- RESET REMOVING OTHER COMMITS TO A SPECIFC COMMIT
------------------------------------------------
$ git reset --hard 88388

------------------------------------------------
GIT -- UNDOING GIT ADD
------------------------------------------------
$ git reset
$ git reset <file>

------------------------------------------------
GIT -- IGNORE LOCAL CHANGES TO TRACKED FILES
------------------------------------------------
$ git update-index --assume-unchanged path/file/file.txt

------------------------------------------------
GIT -- NAMED A GIT STASH
------------------------------------------------
$ git stash save "name wanted"
$ git stash apply stash^{/name wa}

------------------------------------------------
GIT -- APPLYING AND INDEXED STASK ITEM
------------------------------------------------
$ git apply stash@{0}

------------------------------------------------
GIT -- REMOVE BRANCH REMOTELY
------------------------------------------------
$ git push origin --delete branch-name

------------------------------------------------
GIT -- LIST REMOTE BRANCHS
------------------------------------------------
$ git branch -r

------------------------------------------------
GIT -- RENAMING BRANCH
------------------------------------------------
$ git branch -m previousName newName

------------------------------------------------
UPDATE SUB MODULE
------------------------------------------------
$ git submodule update --remote

------------------------------------------------
REALLY NICE GIT LOG
------------------------------------------------
$ git log --submodule=log --pretty=format:"%C(yellow)%h%Creset%C(cyan)%C(bold)%d%Creset %C(cyan)(%cr)%Creset %C(green)%ce%Creset %s"

'%h': abbreviated commit hash
'%d': ref names, like the --decorate option of git-log[1]
'%cr': committer date, relative
'%ce': committer email
'%s': subject

------------------------------------------------
GIT -- CHECKOUT A FILE TO A SPECIFIC COMMIT
------------------------------------------------
$ git checkout cd9b59044d7a433be4ecaeecad0de16d388da642 file/path/file.txt

------------------------------------------------
GIT -- SEARCH FOR A SPECIFIC LOG MESSAGE
------------------------------------------------
$ git log --oneline | grep ET-865

------------------------------------------------
GIT -- LIST ALL COMMITS IN A SPECIFC FILE
------------------------------------------------
$ git log --follow path/to/file/filename.extension

------------------------------------------------
GIT -- LIST ALL STASH CONTENT
------------------------------------------------
$ git stash show -p

------------------------------------------------
GIT -- CHANGING COMMIT MESSAGE LOCALLY
------------------------------------------------
$ git commit --amend

***********************************************************
							UNIX
***********************************************************
--------------------------------------------
UNIX - find program by port
--------------------------------------------
$ sudo netstat -tulpn | grep 7001

--------------------------------------------
UNIX - remove files resul from a file search
--------------------------------------------
$ find . -name  "*.iml" -exec rm -rf {} \;

--------------------------------------------
UNIX - RUNNING A GREP IN A FIND FILE RETURN
--------------------------------------------
$ find . -name "*DefaultFileStoreFactory*" -exec grep configurationPath {} \;

--------------------------------------------
UNIX - find a program id
--------------------------------------------
$ pgrep -u tomas -f  skype

--------------------------------------------
UNIX - showing HD's space on linux
--------------------------------------------
$ df -h

--------------------------------------------
UNIX - showing all folder's content length
--------------------------------------------
$ du -sh *

--------------------------------------------
UNIX - find diretories call dirname without recusive
--------------------------------------------
$ find ./ -maxdepth 1 -type d -name dirname

--------------------------------------------
UNIX - find filex by date and ignore some folders
--------------------------------------------
$ find . -name guideline -prune -o -name '*.jsp' -newermt $DATE_TO_SEARCH -print

--------------------------------------------
UNIX - copy files from another server
--------------------------------------------
$ scp user@hosts:/path/file/origin/file.txt .

--------------------------------------------
UNIX - print the date two days ago
--------------------------------------------
$ date -d '2 days ago' '+%Y-%m-%d'

--------------------------------------------
UNIX - GREP CONTENT INFORMING THE FILE PATTERN
--------------------------------------------
$ grep -rnw "DISABLE_LIND" --include=*.java

$ grep -rnwi "tools" --include=*.{properties,xml}

$ grep -rnwi "HEAD" --include=*.{jsp,java,properties,xml,scss}

--------------------------------------------
UNIX - CHECKING A END FILE FORMAT
--------------------------------------------
$ file testfile.txt: ASCII text

--------------------------------------------
UNIX - CONVERTING FILE FOR UNIX FORMAT
--------------------------------------------
$ dos2unix testfile2.txt

--------------------------------------------
UNIX - SETIMG FILE FORMAT USING CONVERTING FILE FOR UNIX FORMAT
--------------------------------------------
$ set fileformat=unix

--------------------------------------------
UNIX - REMOVING ALL FILES THAT ARE NOT JARS
--------------------------------------------
$ rm -r !(*.jar)

--------------------------------------------
UNIX - TAIL A FILE WITH AN INTERVAL OF 0 SECONDS
--------------------------------------------
$ tail -f -s0

--------------------------------------------
UNIX - OPEN WITH CAT GZ FILES
--------------------------------------------
$ zcat 2017-12-19T00-00-00.info.log.gz

--------------------------------------------
UNIX - RUN GREP AGAINST ZCAT RESULT
--------------------------------------------
$ zcat log_archive_201801*.gz | grep --color=auto -a "pattern"

--------------------------------------------
UNIX - TO FIND OUT WHAT VERSION OF LINUX YOU ARE RUNNING
--------------------------------------------
$ cat /etc/*-release

--------------------------------------------
UNIX - CURL HTTP HEADER
--------------------------------------------
$ curl -I http://page_to_request

--------------------------------------------
REGEX FIND REPLACE
--------------------------------------------
find:
^[\d]{1,2}
replace:
$& content to add

***********************************************************
						ORACLE
***********************************************************
---------------------------------------------
ORACLE LISTING ALL CONSTRAINS
---------------------------------------------
$ select * from ALL_CONSTRAINTS;

---------------------------------------------
ORACLE LISTING ALL PRIVILEGES
---------------------------------------------
$ select * from DBA_SYS_PRIVS;

---------------------------------------------
ORACLE LISTING ALL PRIVILEGES BY USER
---------------------------------------------
$ select * from DBA_SYS_PRIVS where GRANTEE like '%ATG%';

---------------------------------------------
DESCRIBE A TABLE
---------------------------------------------
$ describe table_name;

---------------------------------------------
LISTING ALL SCHEMAS
---------------------------------------------
$ select distinct owner from dba_segments where owner not in ('SYSTEM', 'XDB', 'SYS', 'TSMSYS', 'MDSYS', 'EXFSYS', 'WMSYS', 'ORDSYS', 'OUTLN', 'DBSNMP');

---------------------------------------------
DESCRIBE A TABLE
---------------------------------------------
describe table_name;

***********************************************************
						JAVA
***********************************************************
--------------------------------------------
JAVA - LISTING ALL CLASSES FROM A JAR FILE
--------------------------------------------
$ jar -tvf classes.jar

--------------------------------------------
JAVA - GETTING THREAD DUMP
--------------------------------------------
$ jstack -l JAVA_PID > jstack.out

-------------------------------------------------------
JAVA - FINDING OUT WHICH THREAD IS CONSUMMING MORE CPU
------------------------------------------------------
1 - $ top -n 1 -H -p [pid]
2 - $ jstack [PID] > jstack-output.txt
3 - Take a look at the top result and check the PID.
4 - Convert the pid to hex.
5 - $ cat jstack-output.txt | grep -i 2202(converted pid)

***********************************************************
					SEND EMAIL USING SMTP
***********************************************************
[user@serverhost logs]$ telnet smtp-server-hosts 25
Trying 187.17.75.138...
Connected to smtp-server-hosts (127.0.0.1).
Escape character is '^]'.
220 relay01.hosts.local ESMTP Postfix
helo test
250 relay01.hots.local
mail from: user@gmail.com
250 2.1.0 Ok
rcpt to: user@gmail.com
250 2.1.5 Ok
data
354 End data with <CR><LF>.<CR><LF>
teste envio hmg2
.
250 2.0.0 Ok: queued as 97B061447C
quit
221 2.0.0 Bye
Connection closed by foreign host.


***********************************************************
					RUBY ON RAILS
***********************************************************
--------------------------------------------
TESTING JUST ONE TEST
--------------------------------------------

$ rake test TEST=test/integration/company_controller_integration_test.rb TESTOPTS="--name=test_integration_should_find_full_company_by_token -v"

--------------------------------------------
TESTING JUST ONE CLASS TEST
--------------------------------------------
$ rake test TEST=test/integration/company_controller_integration_test.rb -v


***********************************************************
						MAC OS
***********************************************************
--------------------------------------------
CLEAN TERMINAL HISTORIC (UBUNTU RESET)
--------------------------------------------
$ command + k

--------------------------------------------
CHECKING PORT
--------------------------------------------
$ lsof -i :3306

--------------------------------------------
FINDING A 'PROGRAM' BY PORT
--------------------------------------------
$ lsof -i tcp:9040

***********************************************************
						DOCKER
***********************************************************
--------------------------------------------
REMOVE ALL DOCKER IMAGES WITHOUT TAG
--------------------------------------------
$ docker rmi -f $(docker images --all | grep -i "<none>" | awk '{print $3}')

--------------------------------------------
REMOVE ALL DOCKER IMAGES
--------------------------------------------
$ docker rmi $(docker images -q)
$ docker rmi -f $(docker ps -a | grep -i "<none>" | awk '{print $3}')

----------------------------------------------------------------------------------------
START A DOCKER CONTAINER WITH A HOST FOLDER CONFIGURED AS A VOLUME INTO CONTAINER
----------------------------------------------------------------------------------------
-- linux
$ docker run -it --rm  -e "ENV_VARIABLE=123123" -e "ENV_VARIABLE_2=3322" -v localPath:/home/app <image_name>
-- windows
$ docker run -it --rm  -e "ENV_VARIABLE=123123" -e "ENV_VARIABLE_2=3322" -v /c/Users/personal/project:/home/app <image_name>

----------------------------------------------------------------------------------------
DOCKER BUILDING AN IMAGE USING ARGUMENTS
----------------------------------------------------------------------------------------
$ docker build -t <image_name> --build-arg <parameter_name>=<parameter_value> .

----------------------------------------------------------------------------------------
EXECUTING A MAVEN INTEGRATION TEST THROUGH A DOCKER CONTAINER
----------------------------------------------------------------------------------------
$ docker run -it --rm --name <container_name> <image_name> <maven command>
example: docker run -it --rm --name eng eng mvn verify -DskipItTest=false  -P it
docker run -e "SPRING_DATASOURCE_USERNAME=123123" -e "SPRING_DATASOURCE_URL=3322" -e "SPRING_DATASOURCE_PASSWORD=123" -it --rm --name eng eng  mvn spring-boot:run -Drun.arguments="--spring.profiles.active=local"



***********************************************************
						MAVEN
***********************************************************
----------------------------------------------------------------------------------------
 RUNNING A MAVEN TEST SETTING THE A PROPERTY VALUE THROUGH COMMAND LINE
----------------------------------------------------------------------------------------
$ mvn test -Doxford.service.api.id=OXFORD_SERVICE_API_ID -Doxford.service.app.key=OXFORD_SERVICE_APP_KEY

----------------------------------------------------------------------------------------
 RUNNING A MAVEN TEST FOR A SPECIFIC CLASS AND METHOD
----------------------------------------------------------------------------------------
$ mvn test -P it -Dtest=CardsTypeControllerIT#save_ValidResourceGiven_ShouldSaveClient

--------------------------------------------
RUNNING A MAVEN TEST FOR A SPECIFIC SPRING PROFILE
--------------------------------------------
$ mvn -DargLine="-Dspring.profiles.active=dev" test

***********************************************************
						POSTGRES
***********************************************************
--------------------------------------------
LISTING ALL DATABASES
--------------------------------------------
$SELECT datname FROM pg_database WHERE datistemplate = false;

--------------------------------------------
CONNECTION TO A POSTGRES
--------------------------------------------
$psql -U postgres

--------------------------------------------
QUIT FROM A POSTGRES CONNECTION
--------------------------------------------
$\q

***********************************************************
						MONGO
***********************************************************
--------------------------------------------
MONGO IMPORT TO A REMOTE MONGO
--------------------------------------------
$ mongoimport --db databaseName --collection known_words --file known_words.json --host host:13282 -u user -p pass


***********************************************************
						WINDOWS
***********************************************************
--------------------------------------------
CLEAN TERMINAL
--------------------------------------------
$ cls

--------------------------------------------
FIND A PROCCESS BY PORT
--------------------------------------------
$ netstat -ano | grep 5556

--------------------------------------------
FIND A TASK BY PID
--------------------------------------------
$ tasklist -fi "pid eq 2856"

--------------------------------------------
KILLING A TASK USING A FIND RESULT
--------------------------------------------
$ taskkill /F /FI "PID eq 2856"

--------------------------------------------
KILLING A TASK BY PID
--------------------------------------------
$ taskkill /F /PID 2856

--------------------------------------------
RENANING EITHER A FILE OR DIRECTORE
--------------------------------------------
$ ren chap10 part10

--------------------------------------------
PRINTING ON THE COMMAND A FILE CONTENT
--------------------------------------------
$ type fileName

--------------------------------------------
FINDING FILE
--------------------------------------------
$ dir archive /S
